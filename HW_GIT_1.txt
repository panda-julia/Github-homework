telegram username: panda.panda10

GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.

on the https://github.com create a new repository with name "JSON"

 5. Клонировать репозиторий JSON на локальный компьютер.

git clone git@github.com:panda-julia/JSON.git

 6. Внутри локального JSON создать файл “new.json”.

cd JSON
touch new.json

 7. Добавить файл под гит.

git add new.json

 8. Закоммитить файл.

git commit -m "add the file new.json"

 9. Отправить файл на внешний GitHub репозиторий.

git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

cat > new.json
{
   "name":"Давиденко Юлия Витальевна",
   "age":27,
   "pets":0,
   "salary":"$500"
}
enter
сtrl + C

 11. Отправить изменения на внешний репозиторий.

git commit -am "add info"
git push

 12. Создать файл "preferences.json".

touch preferences.json

 13. В файл "preferences.json" добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.

cat > preferences.json
{
   "favorite_film":"Гарри Поттер",
   "favorite_serial":"Бумажный дом",
   "favorite_food":"Картошка",
   "favorite_season":"Лето",
   "country_for_travel":"Австралия"
}
enter
сtrl + C

 14. Создать файл "sklls.json" добавить информацию о скиллах которые будут изучены на курсе в формате JSON.

cat > sklls.json
[
   "Программа курса:",
   "1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.",
   "2. Что такое клиент-серверная архитектура.",
   "3. HTTP Методы запросов на сервер.",
   "4. Коды ответов HTTP сервера.",
   "5. Структуры HTTP запросов и ответов.",
   "6. Что такое JSON, XML. Их структура.",
   "7. Тестирование API через Postman (JS, автотесты API).",
   "8. Снятие и чтение логов c внешнего сервера.",
   "9. Снифинг http web трафика через Charles и Fiddler.",
   "10. Dev Tools веб браузеров (Google Chrome, FireFox).",
   "11. VPN (Как работает, зачем нужен, как использовать, варианты инструментов).",
   "12. Мобильное тестирование.",
   "13. Особенность iOS, Android, гайдлайны.",
   "14. Сборка iOS приложений на XCode.",
   "15. Сборка Android приложений на Android Studio.",
   "16. ADB (управление андройд девайсами).",
   "17. Настройка прокси и vpn на iOS и Android.",
   "18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.",
   "19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса).",
   "20. Основы bash скриптинг, автоматизация рутинных задач на сервере.",
   "21. Доступ к удалённым серверам.",
   "22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).",
   "23. База данных Postgres (установка, настройка и использование).",
   "24. Нереляционная база данных Redis (установка, настройка и использование).",
   "25. Нагрузочное тестирование в Jmeter.",
   "26. Методология разработки Scrum."
]
enter
сtrl + C

 15. Отправить сразу 2 файла на внешний репозиторий.

git add preferences.json sklls.json 
git commit -m "add file about me preferences and file about skils that the course provide" 
git push

 16. На веб интерфейсе создать файл "bug_report.json".

click the button "Add file" than click "Create new file"
enter in the field "Name your file": bug_report.json

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit new file"

 18. На веб интерфейсе модифицировать файл "bug_report.json", добавить баг репорт в формате JSON.

from file list click bug_report.json
click "Edit this file"
[
   "ФИО исполнителя",
   "Окружение",
   "ОС окружения",
   {
      "title1":"Название таска",
      "description1":"Должно содержать указание места и конкретно в чём баг"
   },
   {
      "title2":"Описание ошибки",
      "description2":"Описание как воспроизвести баг пошаговое"
   },
   {
      "title3":"Результат",
      "description3":"Здесь пишем конкретно что произошло, что заставило вас написать этот таск."
   },
   {
      "title4":"Ожидаемый_результат",
      "description4":"Как вы хотите чтобы было."
   }
]

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit changes"

 20. Синхронизировать внешний и локальный репозиторий JSON.

git pull

XML
 21. Создать внешний репозиторий c названием XML.

On the https://github.com create a new repository with name "XML"

 22. Клонировать репозиторий XML на локальный компьютер.

git clone git@github.com:panda-julia/XML.git  

 23. Внутри локального XML создать файл “new.xml”.

cd XML
touch new.xml

 24. Добавить файл под гит.

git add new.xml
  
 25. Закоммитить файл.

git commit -m "add the file new.xml"

 26. Отправить файл на внешний GitHub репозиторий.

git push 

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.

cat > new.xml
<?xml version="1.0" encoding="UTF-8"?>
<personal_info>
   <name>ФИО: Давиденко Юлия Витальевна</name>
   <age>Возраст: 27</age>
   <pets>Количество домашних животны:0</pets>
   <salary>Будущая желаемая зарплата:$500</salary>
</personal_info>
enter
сtrl + C

 28. Отправить изменения на внешний репозиторий.

git commit -am "add info"
git push

 29. Создать файл "preferences.xml".

touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате XML.

cat > touch preferences.xml
<?xml version="1.0" encoding="UTF-8"?>
<preferences>
   <favorite_film>Любимый фильм: Гарри Поттер</favorite_film>
   <favorite_serial>Любимый сериал: Бумажный дом</favorite_serial>
   <favorite_food>Любимая еда: Картошка</favorite_food>
   <favorite_season>Любимое время года: Лето</favorite_season>
   <country_for_travel>Страна которую хотели бы посетить: Австралия</country_for_travel>
</preferences>
enter
сtrl + C

 31. Создать файл добавить информацию о скиллах которые будут изучены на курсе в формате XML.

cat > sklls.xml 
<?xml version="1.0" encoding="UTF-8"?>
<skills>
   <header>Программа курса:</header>
   <line1>1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.</line1>
   <line2>2. Что такое клиент-серверная архитектура.</line2>
   <line3>3. HTTP Методы запросов на сервер.</line3>
   <line4>4. Коды ответов HTTP сервера.</line4>
   <line5>5. Структуры HTTP запросов и ответов.</line5>
   <line6>6. Что такое JSON, XML. Их структура.</line6>
   <line7>7. Тестирование API через Postman (JS, автотесты API).</line7>
   <line8>8. Снятие и чтение логов c внешнего сервера.</line8>
   <line9>9. Снифинг http web трафика через Charles и Fiddler.</line9>
   <line10>10. Dev Tools веб браузеров (Google Chrome, FireFox).</line10>
   <line11>11. VPN (Как работает, зачем нужен, как использовать, варианты инструментов).</line11>
   <line12>12. Мобильное тестирование.</line12>
   <line13>13. Особенность iOS, Android, гайдлайны.</line13>
   <line14>14. Сборка iOS приложений на XCode.</line14>
   <line15>15. Сборка Android приложений на Android Studio.</line15>
   <line16>16. ADB (управление андройд девайсами).</line16>
   <line17>17. Настройка прокси и vpn на iOS и Android.</line17>
   <line18>18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.</line18>
   <line19>19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса).</line19>
   <line20>20. Основы bash скриптинг, автоматизация рутинных задач на сервере.</line20>
   <line21>21. Доступ к удалённым серверам.</line21>
   <line22>22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).</line22>
   <line23>23. База данных Postgres (установка, настройка и использование).</line23>
   <line24>24. Нереляционная база данных Redis (установка, настройка и использование).</line24>
   <line25>25. Нагрузочное тестирование в Jmeter.</line25>
   <line26>26. Методология разработки Scrum.</line26>
</skills>
enter
сtrl + C

 32. Сделать коммит в одну строку.

git add preferences.xml sklls.xml | git commit -m "add file about me preferences and file about skils that the course provide"

 33. Отправить сразу 2 файла на внешний репозиторий.

git push

 34. На веб интерфейсе создать файл "bug_report.xml".

click the button "Add file" than click "Create new file"
enter in the field "Name your file": bug_report.xml

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit new file"

 36. На веб интерфейсе модифицировать файл "bug_report.xml", добавить баг репорт в формате XML.

from file list click bug_report.xml
click "Edit this file"

<?xml version="1.0" encoding="UTF-8"?>
<bug_report>
   <main_info>ФИО исполнителя, Окружени, ОС окружения</main_info>
   <title1>Название таска</title1>
   <description1>Должно содержать указание места и конкретно в чём баг</description1>
   <title2>Описание ошибки</title2>
   <description2>Описание как воспроизвести баг пошаговое</description2>
   <title3>Результат</title3>
   <description3>Здесь пишем конкретно что произошло, что заставило вас написать этот таск.</description3>
   <title4>Ожидаемый_результат</title4>
   <description4>Как вы хотите чтобы было.</description4>
</bug_report>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit changes"

 38. Синхронизировать внешний и локальный репозиторий XML

git pull

TXT
 39. Создать внешний репозиторий c названием TXT.

On the https://github.com create a new repository with name "JSON"

 40. Клонировать репозиторий TXT на локальный компьютер.

git clone git@github.com:panda-julia/TXT.git

 41. Внутри локального TXT создать файл “new.txt”.

cd TXT 
touch new.txt

 42. Добавить файл под гит.

git add new.txt

 43. Закоммитить файл.

git commit -m "add the file new.txt"

 44. Отправить файл на внешний GitHub репозиторий.

git push

 45. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.

cat > new.txt 
ФИО: Давиденко Юлия Витальевна,
Возраст: 27,
Количество домашних животных: 0,
Будущая желаемая зарплата: $500.
enter
ctrl + C

 46. Отправить изменения на внешний репозиторий.

git commit -am "add info"
git push

 47. Создать файл preferences.txt

touch preferences.txt

 48. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, стрaна которую хотели бы посетить) в формате TXT.

cat > preferences.txt
Любимый фильм: Гарри Поттер,
Любимый сериал: Бумажный дом, 
Любимая еда: Картошка, 
Любимое время года: Лето,
Страна которую хотели бы посетить: Австралия.
enter
ctrl + C

 49. Создать файл "sklls.txt" добавить информацию о скиллах которые будут изучены на курсе в формате TXT.

cat > sklls.txt
Программа курса:
1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура.
7. Тестирование API через Postman (JS, автотесты API).
8. Снятие и чтение логов c внешнего сервера.
9. Снифинг http web трафика через Charles и Fiddler.
10. Dev Tools веб браузеров (Google Chrome, FireFox).
11. VPN (Как работает, зачем нужен, как использовать, варианты инструментов).
12. Мобильное тестирование.
13. Особенность iOS, Android, гайдлайны.
14. Сборка iOS приложений на XCode.
15. Сборка Android приложений на Android Studio.
16. ADB (управление андройд девайсами).
17. Настройка прокси и vpn на iOS и Android.
18. Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android.
19. Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса).
20. Основы bash скриптинг, автоматизация рутинных задач на сервере.
21. Доступ к удалённым серверам.
22. Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join).
23. База данных Postgres (установка, настройка и использование).
24. Нереляционная база данных Redis (установка, настройка и использование).
25. Нагрузочное тестирование в Jmeter.
26. Методология разработки Scrum.
enter
сtrl + C

 50. Сделать коммит в одну строку.

git add preferences.txt sklls.txt | git commit -m "add file about me preferences and file about skils that the course provide"

 51. Отправить сразу 2 файла на внешний репозиторий.

git push

 52. На веб интерфейсе создать файл "bug_report.txt".

click the button "Add file" than click "Create new file"
enter in the field "Name your file": bug_report.txt

 53. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit new file"

 54. На веб интерфейсе модифицировать файл "bug_report.txt", добавить баг репорт в формате TXT.

from file list click bug_report.xml
click "Edit this file"

ФИО исполнителя, Окружение, ОС окружения 
Название таска: Должно содержать указание места и конкретно в чём баг.
Описание ошибки: Описание как воспроизвести баг пошаговое.
Результат: Здесь пишем конкретно что произошло, что заставило вас написать этот таск.
Ожидаемый результат: Как вы хотите чтобы было.

 55. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

click the button "Commit changes"

 56. Синхронизировать внешний и локальный репозиторий TXT.

git pull
